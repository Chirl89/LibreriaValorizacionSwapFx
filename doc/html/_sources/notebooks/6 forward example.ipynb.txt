{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "# Construcción y valorización de producto Forward"
   ]
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Carga de Librerías"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "outputs": [],
   "source": [
    "from finrisklib.instruments.forward import Forward\n",
    "from finrisklib.instruments.flow import Cash\n",
    "from finrisklib.enums import Currency\n",
    "from finrisklib.data.dbreader import DBReader\n",
    "from datetime import date\n"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2023-05-04T15:01:31.765741Z",
     "end_time": "2023-05-04T15:01:33.143196Z"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Construcción"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "outputs": [],
   "source": [
    "# Nocionales (Operación 6812159)\n",
    "active_notional = Cash(amount=225000, currency=Currency.USD)\n",
    "passive_notional = Cash(amount=195558750, currency=Currency.CLP)\n",
    "\n",
    "# Fechas\n",
    "start_date = date(year=2022, month=6, day=14)\n",
    "end_date = date(year=2022, month=7, day=18)\n",
    "fixing_date = date(year=2022, month=7, day=18)\n",
    "pay_date = date(year=2022, month=7, day=18)\n",
    "\n",
    "# Construcción del instrumento\n",
    "\n",
    "op_6812159 = Forward(active_notional=active_notional, passive_notional=passive_notional,\n",
    "                  start_date=start_date, end_date=end_date, pay_date=pay_date, fixing_date=fixing_date, associated_collateral=Currency.USD)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2023-05-04T15:01:33.149451Z",
     "end_time": "2023-05-04T15:01:33.149957Z"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Valorización\n",
    "\n",
    "### a) Valorización con moneda default"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "28,536,787.95 CLP\n"
     ]
    }
   ],
   "source": [
    "# Fecha de valorización\n",
    "valuation_date = date(year=2022, month=7, day=11)\n",
    "\n",
    "# Inicializamos el lector de base de datos\n",
    "reader = DBReader()\n",
    "\n",
    "dataset = reader.get_dataset(process_date=valuation_date)\n",
    "\n",
    "val = op_6812159.valuate(dataset=dataset)\n",
    "\n",
    "print(val)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2023-05-04T15:01:33.149957Z",
     "end_time": "2023-05-04T15:01:35.680148Z"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "### b) Valorización con moneda especificada"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "28,688.56 USD\n"
     ]
    }
   ],
   "source": [
    "dataset.set_default_valuation_currency(valuation_currency=Currency.USD)\n",
    "\n",
    "val = op_6812159.valuate(dataset=dataset)\n",
    "print(val)\n",
    "\n",
    "dataset.set_default_valuation_currency(valuation_currency=Currency.CLP)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2023-05-04T15:01:35.680148Z",
     "end_time": "2023-05-04T15:01:35.688521Z"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Obtención desde base de datos\n",
    "\n",
    "### a) Obtención de datos"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "28,533,606.60 CLP\n"
     ]
    }
   ],
   "source": [
    "id_number = 6812159\n",
    "\n",
    "db_op = reader.get_operation(id_number=id_number, process_date=valuation_date)\n",
    "val = db_op.valuate(dataset=dataset)\n",
    "\n",
    "print(val)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2023-05-04T15:02:49.410412Z",
     "end_time": "2023-05-04T15:02:50.145084Z"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "### b) Obtención de MtM Oficial"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "28,541,754.30 CLP\n"
     ]
    }
   ],
   "source": [
    "mtm = reader.get_official_mtm(id_number=id_number, process_date=valuation_date)\n",
    "\n",
    "print(mtm)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "start_time": "2023-05-04T15:02:51.734089Z",
     "end_time": "2023-05-04T15:02:51.953186Z"
    }
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "name": "python3",
   "language": "python",
   "display_name": "Python 3 (ipykernel)"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
